sequenceDiagram
  autonumber
  participant TX as Transactions API
  participant Exchange as RabbitMQ Exchange
  participant Queue as consolidations-queue
  participant Consumer as TransactionEventConsumer
  participant Service as ConsolidationService
  participant Repository as DailyConsolidationRepository
  participant DB as PostgreSQL
  participant DLQ as Dead Letter Queue

  Note over TX,Exchange: Evento publicado após criação de transação
  TX->>Exchange: Publish TransactionCreatedEvent
  Exchange->>Queue: Route to consolidations-queue

  Note over Consumer: Background Service processando continuamente
  loop Background Processing
    Consumer->>Queue: Pull next message
    Queue-->>Consumer: TransactionCreatedEvent message

    Note over Consumer,Service: Processamento do evento
    Consumer->>Consumer: Deserialize event JSON
    Consumer->>Service: CreateOrUpdateDailyConsolidationAsync(event)

    alt Consolidação já existe para MerchantId + Date
      Service->>Repository: GetByMerchantAndDateAsync(merchantId, date)
      Repository->>DB: SELECT query
      DB-->>Repository: Existing DailyConsolidation
      Repository-->>Service: Domain object

      Service->>Service: UpdateTotals(amount, transactionType)
      Service->>Service: CalculateNetBalance()
      Service->>Repository: UpdateAsync(consolidation)
      Repository->>DB: UPDATE query
      DB-->>Repository: Success
      Repository-->>Service: Updated entity

    else Primeira transação do dia
      Service->>Service: Create new DailyConsolidation
      Service->>Repository: AddAsync(newConsolidation)
      Repository->>DB: INSERT query
      DB-->>Repository: Success
      Repository-->>Service: New entity
    end

    alt Processamento bem-sucedido
      Service-->>Consumer: Success
      Consumer->>Queue: ACK message
      Note right of Queue: Mensagem removida da fila

    else Erro durante processamento
      Service-->>Consumer: Exception
      Consumer->>Consumer: Log error details
      Consumer->>Queue: NACK (requeue=false)
      Queue->>DLQ: Send to Dead Letter Queue

      Note over DLQ: Mensagem preservada para análise<br/>• Investigação manual<br/>• Reprocessamento posterior<br/>• Alertas para operação
    end
  end

  Note over Consumer,DB: Características do processamento
  Note right of Consumer: • BackgroundService contínuo<br/>• Prefetch configurável<br/>• Retry logic implementado<br/>• Observabilidade integrada
  Note right of DB: • Transações ACID<br/>• Índices otimizados<br/>• Connection pooling<br/>• Eventual consistency