flowchart LR
  subgraph Client
    U[Client / k6]
  end

  U -->|OAuth2 Password| G[KrakenD API Gateway<br/>ONLY public service]

  subgraph NetPub[public_network - SECURED]
    G
  end

  subgraph NetKeycloak[keycloak_network - PRIVATE]
    KC[Keycloak]
    KCDB[Keycloak DB]
  end

  subgraph NetTx[transactions_network - PRIVATE]
    T1[Transactions API #1]
    T2[Transactions API #2]
    HTX[HAProxy - Transactions<br/>PRIVATE access only]
    PQT[PgBouncer - Transactions]
    DBT[Postgres - transactions]
    MQTx[RabbitMQ<br/>IP: 172.20.0.20]
  end

  subgraph NetCo[consolidations_network - PRIVATE]
    C1[Consolidations API #1]
    C2[Consolidations API #2]
    HCO[HAProxy - Consolidations<br/>PRIVATE access only]
    PQC[PgBouncer - Consolidations]
    DBC[Postgres - consolidations]
    MQCo[RabbitMQ<br/>IP: 172.21.0.20]
  end

  subgraph MQ[RabbitMQ Logical View]
    EX[Exchange: cash-flow-exchange]
    Q[Queue: consolidations-queue]
    DLX[DLX: cash-flow-dlx]
    DLQ[DLQ: consolidations-queue-dlq]
  end

  %% Security-first connections
  G -.->|keycloak_network<br/>service: keycloak:8080| KC
  G -.->|transactions_network<br/>service: haproxy-transactions:8080| HTX
  G -.->|consolidations_network<br/>service: haproxy-consolidations:8080| HCO

  HTX --> T1 & T2
  HCO --> C1 & C2
  KC --> KCDB

  T1 & T2 -->|Dapper via IDatabaseProtocol| PQT --> DBT
  C1 & C2 -->|EF Core Repository| PQC --> DBC

  %% Message flow - same RabbitMQ instance, different network access
  MQTx -.->|same instance| MQCo
  MQTx -.-> EX
  MQCo -.-> Q

  T1 & T2 -->|Publish transaction.created| EX --> Q
  C1 & C2 -->|Consume & Ack/Nack| Q
  Q -->|Nack requeue=false| DLX --> DLQ

  subgraph Observability[Observability Stack - PUBLIC]
    P[Prometheus<br/>:9090]
    Gr[Grafana<br/>:3000]
    HA1[HAProxy Stats TX<br/>:8181 local]
    HA2[HAProxy Stats CO<br/>:8282 local]
    cAdv[cAdvisor<br/>:8081]
    nExp[Node Exporter<br/>:9100]
    pgbExpT[PgBouncer Exporter TX]
    pgbExpC[PgBouncer Exporter CO]
    MQExp[RabbitMQ Exporter<br/>:15692 local]
  end

  P <-- scrape --> T1 & T2 & C1 & C2 & G & HA1 & HA2 & pgbExpT & pgbExpC & cAdv & nExp & MQExp
  Gr --> P

  %% Styling
  classDef public fill:#e8f5e8,stroke:#2e7d32,stroke-width:3px
  classDef private fill:#fce4ec,stroke:#c2185b,stroke-width:2px
  classDef monitoring fill:#e3f2fd,stroke:#1976d2,stroke-width:2px

  class G,P,Gr,cAdv,nExp public
  class KC,T1,T2,C1,C2,HTX,HCO,PQT,PQC,DBT,DBC,KCDB,MQTx,MQCo private
  class HA1,HA2,pgbExpT,pgbExpC,MQExp monitoring
